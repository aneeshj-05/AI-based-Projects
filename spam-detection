import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load dataset
data=pd.read_csv('spambase/spambase.data',header=None)

# Display first few rows of the dataset
print("First few rows of the dataset:")
print(data.head())

# Separate features (X) and labels (y)
X = data.iloc[:,:-1]  # All columns except the last one as features
y = data.iloc[:,-1]   # Last column as labels (spam: 1, not spam: 0)

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

scaler=StandardScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)

# Initialize the Logistic Regression model
model=LogisticRegression()

# Train the model on the training set
model.fit(X_train,y_train)

# Predict on the test set
y_pred=model.predict(X_test)

# Evaluate the model
accuracy=accuracy_score(y_test, y_pred)
print(f"\nModel Accuracy: {accuracy * 100:.2f}%")

# Display confusion matrix
print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))

# Display classification report (precision, recall, F1-score)
print("\nClassification Report:")
print(classification_report(y_test, y_pred))

# Example Predictions (optional)
print("\nExample Predictions:")
print(f"Actual: {y_test[:10].values}, Predicted: {y_pred[:10]}")
